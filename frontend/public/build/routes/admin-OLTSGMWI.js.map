{
  "version": 3,
  "sources": ["empty-module:@remix-run/node", "../../../app/routes/admin.tsx", "../../../app/utils/api.ts", "../../../app/components/AdminDashboard.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/admin.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/admin.tsx\");\n  import.meta.hot.lastModified = \"1743659762697.3796\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, useNavigate } from \"@remix-run/react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getWaitlist } from \"~/utils/api\";\nimport AdminDashboard from \"~/components/AdminDashboard\";\nexport async function loader({\n  request\n}) {\n  // TODO: Implement proper authentication\n  const url = new URL(request.url);\n  const token = url.searchParams.get(\"token\");\n  if (token !== \"admin123\") {\n    throw new Response(\"Unauthorized\", {\n      status: 401\n    });\n  }\n  return json({\n    token\n  });\n}\nexport default function AdminPage() {\n  _s();\n  const {\n    token\n  } = useLoaderData();\n  const navigate = useNavigate();\n  const {\n    data: entries,\n    isLoading,\n    error\n  } = useQuery({\n    queryKey: [\"waitlist\"],\n    queryFn: getWaitlist\n  });\n  const handleLogout = () => {\n    navigate(\"/\");\n  };\n  if (isLoading) {\n    return <div className=\"min-h-screen bg-gray-50 py-12\">\n        <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center\">Loading...</div>\n        </div>\n      </div>;\n  }\n  if (error) {\n    return <div className=\"min-h-screen bg-gray-50 py-12\">\n        <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center text-red-600\">Error loading waitlist</div>\n        </div>\n      </div>;\n  }\n  return <div className=\"min-h-screen bg-gray-50 py-12\">\n      <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n        <div className=\"sm:flex sm:items-center\">\n          <div className=\"sm:flex-auto\">\n            <h1 className=\"text-2xl font-semibold text-gray-900\">Waitlist Management</h1>\n            <p className=\"mt-2 text-sm text-gray-700\">\n              A list of all users who have joined the waitlist.\n            </p>\n          </div>\n          <div className=\"mt-4 sm:ml-16 sm:mt-0 sm:flex-none\">\n            <button type=\"button\" onClick={handleLogout} className=\"block rounded-md bg-white px-3 py-2 text-center text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\">\n              Logout\n            </button>\n          </div>\n        </div>\n\n        {/* Dashboard */}\n        <div className=\"mt-8\">\n          <AdminDashboard entries={entries || []} />\n        </div>\n\n        {/* Waitlist Table */}\n        <div className=\"mt-8 flow-root\">\n          <div className=\"-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n            <div className=\"inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8\">\n              <div className=\"overflow-hidden shadow ring-1 ring-black ring-opacity-5 sm:rounded-lg\">\n                <table className=\"min-w-full divide-y divide-gray-300\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th scope=\"col\" className=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6\">\n                        Email\n                      </th>\n                      <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                        Plan\n                      </th>\n                      <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                        Joined\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200 bg-white\">\n                    {entries?.map(entry => <tr key={entry.id}>\n                        <td className=\"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6\">\n                          {entry.email}\n                        </td>\n                        <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                          {entry.plan}\n                        </td>\n                        <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                          {new Date(entry.created_at).toLocaleDateString()}\n                        </td>\n                      </tr>)}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>;\n}\n_s(AdminPage, \"ni4l48HR/g/wP7i6fQKBxvICFsI=\", false, function () {\n  return [useLoaderData, useNavigate, useQuery];\n});\n_c = AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/api.ts\"\n);\nimport.meta.hot.lastModified = \"1743659762683.75\";\n}\n// REMIX HMR END\n\nimport axios from 'axios';\nimport type { WaitlistEntry, WaitlistFormData, WaitlistError } from '~/types/waitlist';\n\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport async function joinWaitlist(data: WaitlistFormData): Promise<WaitlistEntry> {\n  try {\n    const response = await api.post<WaitlistEntry>('/waitlist', data);\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError<WaitlistError>(error) && error.response) {\n      throw new Error(error.response.data.error);\n    }\n    throw new Error('Failed to join waitlist');\n  }\n}\n\nexport async function getWaitlist(): Promise<WaitlistEntry[]> {\n  try {\n    const response = await api.get<WaitlistEntry[]>('/waitlist');\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError<WaitlistError>(error) && error.response) {\n      throw new Error(error.response.data.error);\n    }\n    throw new Error('Failed to fetch waitlist');\n  }\n} ", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/AdminDashboard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/AdminDashboard.tsx\");\n  import.meta.hot.lastModified = \"1743659762692.7083\";\n}\n// REMIX HMR END\n\nexport default function AdminDashboard({\n  entries\n}) {\n  const totalEntries = entries.length;\n  const planCounts = entries.reduce((acc, entry) => {\n    acc[entry.plan] = (acc[entry.plan] || 0) + 1;\n    return acc;\n  }, {});\n  const today = new Date();\n  const todayEntries = entries.filter(entry => {\n    const entryDate = new Date(entry.created_at);\n    return entryDate.toDateString() === today.toDateString();\n  }).length;\n  const stats = [{\n    name: \"Total Waitlist Entries\",\n    value: totalEntries\n  }, {\n    name: \"Today's New Entries\",\n    value: todayEntries\n  }, {\n    name: \"Free Plan\",\n    value: planCounts[\"free\"] || 0\n  }, {\n    name: \"Pro Plan\",\n    value: planCounts[\"pro\"] || 0\n  }, {\n    name: \"Enterprise Plan\",\n    value: planCounts[\"enterprise\"] || 0\n  }];\n  return <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3\">\n      {stats.map(stat => <div key={stat.name} className=\"relative overflow-hidden rounded-lg bg-white px-4 pb-12 pt-5 shadow sm:px-6 sm:pt-6\">\n          <dt>\n            <div className=\"absolute rounded-md bg-indigo-500 p-3\">\n              <svg className=\"h-6 w-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n              </svg>\n            </div>\n            <p className=\"ml-16 truncate text-sm font-medium text-gray-500\">{stat.name}</p>\n          </dt>\n          <dd className=\"ml-16 flex items-baseline pb-6 sm:pb-7\">\n            <p className=\"text-2xl font-semibold text-gray-900\">{stat.value}</p>\n          </dd>\n        </div>)}\n    </div>;\n}\n_c = AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c"]
}
